{"version":3,"sources":["assets/scripts/Joystick.js"],"names":["cc","Class","Component","properties","dot","type","Node","displayName","tooltip","ring","joystickType","JoystickEnum","JoystickType","FIXED","directionType","DirectionType","ALL","_stickPos","_touchLocation","onLoad","_radius","width","_initTouchEvent","FOLLOW","node","opacity","onEnable","JoystickEvent","getInstance","on","JoystickEventType","CHANGE_JOYSTICK_TYPE","_onChangeJoystickType","onDisable","off","EventType","TOUCH_START","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","event","emit","touchPos","convertToNodeSpaceAR","getLocation","getPosition","distance","sub","mag","setPosition","posX","x","posY","y","p","v2","normalize","speedType","SpeedType","NORMAL","FAST","moveDistance","STOP"],"mappings":"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","sourceRoot":"/","sourcesContent":["import JoystickEnum from 'JoystickEnum';\nimport JoystickEvent from 'JoystickEvent';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        dot: {\n            default: null,\n            type: cc.Node,\n            displayName: 'Dot',\n            tooltip: '摇杆操纵点',\n        },\n        ring: {\n            default: null,\n            type: cc.Node,\n            displayName: 'Ring',\n            tooltip: '摇杆背景节点',\n        },\n\n        joystickType: {\n            default: JoystickEnum.JoystickType.FIXED,\n            type: JoystickEnum.JoystickType,\n            displayName: 'Touch Type',\n            tooltip: '触摸类型',\n        },\n\n        directionType: {\n            default: JoystickEnum.DirectionType.ALL,\n            type: JoystickEnum.DirectionType,\n            displayName: 'Direction Type',\n            tooltip: '方向类型',\n        },\n\n        _stickPos: {\n            default: null,\n            type: cc.Node,\n            tooltip: '摇杆所在位置',\n        },\n        _touchLocation: {\n            default: null,\n            type: cc.Node,\n            tooltip: '触摸位置',\n        },\n    },\n\n    onLoad() {\n        this._radius = this.ring.width / 2;\n        this._initTouchEvent();\n        // hide joystick when follow\n        if (this.joystickType === JoystickEnum.JoystickType.FOLLOW) {\n            this.node.opacity = 0;\n        }\n    },\n\n    onEnable() {\n        JoystickEvent.getInstance().on(JoystickEnum.JoystickEventType.CHANGE_JOYSTICK_TYPE, this._onChangeJoystickType, this);\n    },\n\n    onDisable() {\n        JoystickEvent.getInstance().off(JoystickEnum.JoystickEventType.CHANGE_JOYSTICK_TYPE, this._onChangeJoystickType, this);\n    },\n\n    _onChangeJoystickType(type) {\n        this.joystickType = type;\n        this.node.opacity = type === JoystickEnum.JoystickType.FIXED ? 255 : 0;\n    },\n\n    _initTouchEvent() {\n        // set the size of joystick node to control scale\n        this.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);\n    },\n\n    _touchStartEvent(event) {\n        JoystickEvent.getInstance().emit(JoystickEnum.JoystickEventType.TOUCH_START, \"joystick touch start\", 10);\n        const touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\n\n        if (this.joystickType === JoystickEnum.JoystickType.FIXED) {\n            this._stickPos = this.ring.getPosition();\n\n            // 触摸点与圆圈中心的距离\n            const distance = touchPos.sub(this.ring.getPosition()).mag();\n\n            // 手指在圆圈内触摸,控杆跟随触摸点\n            this._radius > distance && this.dot.setPosition(touchPos);\n\n        } else if (this.joystickType === JoystickEnum.JoystickType.FOLLOW) {\n\n            // 记录摇杆位置，给 touch move 使用\n            this._stickPos = touchPos;\n            this.node.opacity = 255;\n            this._touchLocation = event.getLocation();\n\n            // 更改摇杆的位置\n            this.ring.setPosition(touchPos);\n            this.dot.setPosition(touchPos);\n        }\n    },\n\n    _touchMoveEvent(event) {\n        // 如果 touch start 位置和 touch move 相同，禁止移动\n        if (this.joystickType === JoystickEnum.JoystickType.FOLLOW && this._touchLocation === event.getLocation()) {\n            return false;\n        }\n\n        // 以圆圈为锚点获取触摸坐标\n        const touchPos = this.ring.convertToNodeSpaceAR(event.getLocation());\n        const distance = touchPos.mag();\n\n        // 由于摇杆的 postion 是以父节点为锚点，所以定位要加上 touch start 时的位置\n        const posX = this._stickPos.x + touchPos.x;\n        const posY = this._stickPos.y + touchPos.y;\n\n        // 归一化\n        const p = cc.v2(posX, posY).sub(this.ring.getPosition()).normalize();\n\n        let speedType;\n\n        if (this._radius > distance) {\n            this.dot.setPosition(cc.v2(posX, posY));\n\n            speedType = JoystickEnum.SpeedType.NORMAL;\n        } else {\n            // 控杆永远保持在圈内，并在圈内跟随触摸更新角度\n            const x = this._stickPos.x + p.x * this._radius;\n            const y = this._stickPos.y + p.y * this._radius;\n            this.dot.setPosition(cc.v2(x, y));\n\n            speedType = JoystickEnum.SpeedType.FAST;\n        }\n\n        JoystickEvent.getInstance().emit(JoystickEnum.JoystickEventType.TOUCH_MOVE, event, {speedType: speedType, moveDistance: p});\n    },\n\n    _touchEndEvent(event) {\n        this.dot.setPosition(this.ring.getPosition());\n        if (this.joystickType === JoystickEnum.JoystickType.FOLLOW) {\n            this.node.opacity = 0;\n        }\n\n        JoystickEvent.getInstance().emit(JoystickEnum.JoystickEventType.TOUCH_END, event, {speedType: JoystickEnum.SpeedType.STOP});\n    },\n\n});\n"]}