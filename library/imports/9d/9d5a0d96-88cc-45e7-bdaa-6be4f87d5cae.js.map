{"version":3,"sources":["assets/scripts/Monster.js"],"names":["cc","Class","Component","properties","maxHealth","type","Integer","tooltip","currentHealth","healthBar","Node","hitAudio","AudioClip","deathAudio","bombPrefab","Prefab","detectionRadius","Float","moveSpeed","shootInterval","onLoad","lastShootTime","error","collider","getComponent","BoxCollider","addComponent","size","width","node","height","group","barNode","getChildByName","originalBarWidth","log","isDying","rigidBody","RigidBody","RigidBodyType","Dynamic","fixedRotation","createHealthBar","healthBarNode","addChild","zIndex","barBgNode","barBgSprite","Sprite","color","Color","RED","barSprite","GREEN","setPosition","healthBarBg","start","updateHealthBar","takeDamage","damage","audioEngine","playEffect","Math","max","healthPercentage","die","audioId","setFinishCallback","destroy","update","dt","player","find","warn","monsterPos","parent","convertToWorldSpaceAR","position","playerPos","distance","Vec2","v2","x","y","direction","normalize","velocity","linearVelocity","shootBomb","targetPos","currentTime","director","getTotalTime","bomb","instantiate","sub","bombComp","setDirection","setSpeed","setDamage"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n \n    properties: {\n        maxHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物最大生命值'\n        },\n        currentHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物当前生命值'\n        },\n        healthBar: {\n            default: null,\n            type: cc.Node,\n            tooltip: '血条节点'\n        },\n        hitAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '受击音效'\n        },\n        deathAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '死亡音效'\n        },\n        bombPrefab: {\n            default: null,\n            type: cc.Prefab,\n            tooltip: '炸弹预制体'\n        },\n        detectionRadius: {\n            default: 300,\n            type: cc.Float,\n            tooltip: '检测玩家的范围'\n        },\n        moveSpeed: {\n            default: 50,\n            type: cc.Float,\n            tooltip: '移动速度'\n        },\n        shootInterval: {\n            default: 2.0,\n            type: cc.Float,\n            tooltip: '发射间隔'\n        }\n    },\n \n    onLoad() {\n        this.currentHealth = this.maxHealth;\n        this.lastShootTime = 0; // 确保初始化射击时间\n        \n        // 检查是否有炸弹预制体\n        if (!this.bombPrefab) {\n            cc.error('未设置炸弹预制体！');\n        }\n        \n        // 确保有碰撞组件\n        let collider = this.getComponent(cc.BoxCollider);\n        if (!collider) {\n            collider = this.addComponent(cc.BoxCollider);\n            collider.size.width = this.node.width;\n            collider.size.height = this.node.height;\n        }\n        // 设置碰撞组\n        this.node.group = 'monster';\n \n        // 获取血条中的 Bar 节点\n        if (this.healthBar) {\n            this.barNode = this.healthBar.getChildByName('Bar');\n            if (!this.barNode) {\n                cc.error('找不到 Bar 节点！');\n                return;\n            }\n            // 保存初始宽度\n            this.originalBarWidth = this.barNode.width;\n            cc.log('血条初始宽度：', this.originalBarWidth);\n        } else {\n            cc.error('未设置血条节点！');\n        }\n \n        // 添加死亡标记\n        this.isDying = false;\n        \n        // 添加刚体组件\n        let rigidBody = this.getComponent(cc.RigidBody);\n        if (!rigidBody) {\n            rigidBody = this.addComponent(cc.RigidBody);\n            rigidBody.type = cc.RigidBodyType.Dynamic;\n            rigidBody.fixedRotation = true;\n        }\n    },\n \n    createHealthBar() {\n        // 创建血条节点\n        let healthBarNode = new cc.Node('HealthBar');\n        this.node.addChild(healthBarNode);\n        healthBarNode.zIndex = 1;\n        \n        // 创建背景条\n        let barBgNode = new cc.Node('BarBg');\n        healthBarNode.addChild(barBgNode);\n        let barBgSprite = barBgNode.addComponent(cc.Sprite);\n        barBgSprite.color = cc.Color.RED;\n        \n        // 创建血量条\n        let barNode = new cc.Node('Bar');\n        healthBarNode.addChild(barNode);\n        let barSprite = barNode.addComponent(cc.Sprite);\n        barSprite.color = cc.Color.GREEN;\n        \n        // 设置血条尺寸和位置\n        healthBarNode.width = 100;\n        healthBarNode.height = 10;\n        barBgNode.width = 100;\n        barBgNode.height = 10;\n        barNode.width = 100;\n        barNode.height = 10;\n        \n        // 将血条放在怪物上方\n        healthBarNode.setPosition(0, this.node.height / 2 + 10);\n        \n        // 保存引用\n        this.healthBar = healthBarNode;\n        this.healthBarBg = barBgNode;\n    },\n \n    start() {\n        this.updateHealthBar();\n    },\n \n    takeDamage(damage) {\n        // 如果已经在死亡过程中，不再处理伤害\n        if (this.isDying) return;\n        \n        if (typeof damage !== 'number' || damage <= 0) return;\n        \n        // 使用 playEffect 播放音效\n        if (this.hitAudio) {\n            cc.audioEngine.playEffect(this.hitAudio, false, 0.3);\n        }\n        \n        // 减少生命值\n        this.currentHealth = Math.max(0, this.currentHealth - damage);\n        \n        // 更新血条显示\n        if (this.barNode && this.originalBarWidth) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.barNode.width = this.originalBarWidth * healthPercentage;\n        }\n        \n        cc.log('怪物受到伤害:', damage, '当前生命值:', this.currentHealth);\n        \n        // 检查是否死亡\n        if (this.currentHealth <= 0 && !this.isDying) {\n            this.die();\n        }\n    },\n \n    updateHealthBar() {\n        if (this.healthBar) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.healthBar.width = 100 * healthPercentage;\n        }\n    },\n \n    die() {\n        // 设置死亡标记\n        if (this.isDying) return;\n        this.isDying = true;\n        \n        // 使用 playEffect 播放音效\n        if (this.deathAudio) {\n            let audioId = cc.audioEngine.playEffect(this.deathAudio, false, 0.3);\n            cc.audioEngine.setFinishCallback(audioId, () => {\n                this.node.destroy();\n            });\n        } else {\n            this.node.destroy();\n        }\n    },\n\n    update(dt) {\n        if (this.isDying) return;\n        \n        // 获取玩家节点\n        let player = cc.find('Canvas/game/player');\n        if (!player) {\n            cc.warn('找不到玩家节点！请确保场景中玩家节点的路径是 Canvas/game/player');\n            return;\n        }\n        \n        // 获取世界坐标下的位置\n        let monsterPos = this.node.parent.convertToWorldSpaceAR(this.node.position);\n        let playerPos = player.parent.convertToWorldSpaceAR(player.position);\n        \n        // 计算与玩家的距离\n        let distance = cc.Vec2.distance(\n            cc.v2(monsterPos.x, monsterPos.y),\n            cc.v2(playerPos.x, playerPos.y)\n        );\n        \n        // 添加调试日志\n        cc.log('怪物位置:', monsterPos, '玩家位置:', playerPos, '距离:', distance, '检测范围:', this.detectionRadius);\n        \n        // 在检测范围内\n        if (distance < this.detectionRadius) {\n            // 追踪玩家\n            let direction = cc.v2(\n                playerPos.x - monsterPos.x,\n                playerPos.y - monsterPos.y\n            ).normalize();\n            \n            let velocity = this.node.getComponent(cc.RigidBody).linearVelocity;\n            velocity.x = direction.x * this.moveSpeed;\n            velocity.y = direction.y * this.moveSpeed;\n            this.node.getComponent(cc.RigidBody).linearVelocity = velocity;\n            \n            cc.log('怪物正在移动，速度:', velocity);\n            \n            // 发射炸弹\n            this.shootBomb(player.position);\n        } else {\n            // 停止移动\n            let velocity = this.node.getComponent(cc.RigidBody).linearVelocity;\n            velocity.x = 0;\n            velocity.y = 0;\n            this.node.getComponent(cc.RigidBody).linearVelocity = velocity;\n            cc.log('怪物停止移动，超出检测范围');\n        }\n    },\n    \n    shootBomb(targetPos) {\n        const currentTime = cc.director.getTotalTime() / 1000;\n        \n        cc.log('尝试发射炸弹 - 当前时间:', currentTime, \n               '上次发射时间:', this.lastShootTime, \n               '发射间隔:', this.shootInterval,\n               '是否可以发射:', (currentTime - this.lastShootTime >= this.shootInterval));\n        \n        if (currentTime - this.lastShootTime < this.shootInterval) {\n            return;\n        }\n        \n        if (!this.bombPrefab) {\n            cc.error('炸弹预制体未设置！请在编辑器中设置 Monster 组件的 Bomb Prefab 属性');\n            return;\n        }\n        \n        this.lastShootTime = currentTime;\n        \n        // 创建炸弹\n        let bomb = cc.instantiate(this.bombPrefab);\n        if (!bomb) {\n            cc.error('炸弹预制体实例化失败！');\n            return;\n        }\n        \n        // 设置炸弹位置为怪物当前位置\n        bomb.setPosition(this.node.position);\n        this.node.parent.addChild(bomb);\n        \n        // 计算方向（使用本地坐标）\n        let direction = targetPos.sub(this.node.position);\n        \n        // 设置炸弹属性\n        let bombComp = bomb.getComponent('Bomb');\n        if (bombComp) {\n            bombComp.setDirection(direction);\n            bombComp.setSpeed(300); // 增加速度使炸弹移动更明显\n            bombComp.setDamage(20);\n            cc.log('炸弹已发射！方向:', direction, '目标位置:', targetPos, '当前位置:', this.node.position);\n        } else {\n            cc.error('炸弹没有Bomb组件！请确保炸弹预制体已添加 Bomb 组件');\n            bomb.destroy();\n        }\n    }\n}); \n"]}