
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Joystick.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2a5f4A6L4lFJKWrb0ereNkY', 'Joystick');
// scripts/Joystick.js

"use strict";

var _JoystickEnum = _interopRequireDefault(require("JoystickEnum"));
var _JoystickEvent = _interopRequireDefault(require("JoystickEvent"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
cc.Class({
  "extends": cc.Component,
  properties: {
    dot: {
      "default": null,
      type: cc.Node,
      displayName: 'Dot',
      tooltip: '摇杆操纵点'
    },
    ring: {
      "default": null,
      type: cc.Node,
      displayName: 'Ring',
      tooltip: '摇杆背景节点'
    },
    joystickType: {
      "default": _JoystickEnum["default"].JoystickType.FIXED,
      type: _JoystickEnum["default"].JoystickType,
      displayName: 'Touch Type',
      tooltip: '触摸类型'
    },
    directionType: {
      "default": _JoystickEnum["default"].DirectionType.ALL,
      type: _JoystickEnum["default"].DirectionType,
      displayName: 'Direction Type',
      tooltip: '方向类型'
    },
    _stickPos: {
      "default": null,
      type: cc.Node,
      tooltip: '摇杆所在位置'
    },
    _touchLocation: {
      "default": null,
      type: cc.Node,
      tooltip: '触摸位置'
    }
  },
  onLoad: function onLoad() {
    this._radius = this.ring.width / 2;
    this._initTouchEvent();
    // hide joystick when follow
    if (this.joystickType === _JoystickEnum["default"].JoystickType.FOLLOW) {
      this.node.opacity = 0;
    }
  },
  onEnable: function onEnable() {
    _JoystickEvent["default"].getInstance().on(_JoystickEnum["default"].JoystickEventType.CHANGE_JOYSTICK_TYPE, this._onChangeJoystickType, this);
  },
  onDisable: function onDisable() {
    _JoystickEvent["default"].getInstance().off(_JoystickEnum["default"].JoystickEventType.CHANGE_JOYSTICK_TYPE, this._onChangeJoystickType, this);
  },
  _onChangeJoystickType: function _onChangeJoystickType(type) {
    this.joystickType = type;
    this.node.opacity = type === _JoystickEnum["default"].JoystickType.FIXED ? 255 : 0;
  },
  _initTouchEvent: function _initTouchEvent() {
    // set the size of joystick node to control scale
    this.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, this);
    this.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);
    this.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, this);
    this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);
  },
  _touchStartEvent: function _touchStartEvent(event) {
    _JoystickEvent["default"].getInstance().emit(_JoystickEnum["default"].JoystickEventType.TOUCH_START, "joystick touch start", 10);
    var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());
    if (this.joystickType === _JoystickEnum["default"].JoystickType.FIXED) {
      this._stickPos = this.ring.getPosition();

      // 触摸点与圆圈中心的距离
      var distance = touchPos.sub(this.ring.getPosition()).mag();

      // 手指在圆圈内触摸,控杆跟随触摸点
      this._radius > distance && this.dot.setPosition(touchPos);
    } else if (this.joystickType === _JoystickEnum["default"].JoystickType.FOLLOW) {
      // 记录摇杆位置，给 touch move 使用
      this._stickPos = touchPos;
      this.node.opacity = 255;
      this._touchLocation = event.getLocation();

      // 更改摇杆的位置
      this.ring.setPosition(touchPos);
      this.dot.setPosition(touchPos);
    }
  },
  _touchMoveEvent: function _touchMoveEvent(event) {
    // 如果 touch start 位置和 touch move 相同，禁止移动
    if (this.joystickType === _JoystickEnum["default"].JoystickType.FOLLOW && this._touchLocation === event.getLocation()) {
      return false;
    }

    // 以圆圈为锚点获取触摸坐标
    var touchPos = this.ring.convertToNodeSpaceAR(event.getLocation());
    var distance = touchPos.mag();

    // 由于摇杆的 postion 是以父节点为锚点，所以定位要加上 touch start 时的位置
    var posX = this._stickPos.x + touchPos.x;
    var posY = this._stickPos.y + touchPos.y;

    // 归一化
    var p = cc.v2(posX, posY).sub(this.ring.getPosition()).normalize();
    var speedType;
    if (this._radius > distance) {
      this.dot.setPosition(cc.v2(posX, posY));
      speedType = _JoystickEnum["default"].SpeedType.NORMAL;
    } else {
      // 控杆永远保持在圈内，并在圈内跟随触摸更新角度
      var x = this._stickPos.x + p.x * this._radius;
      var y = this._stickPos.y + p.y * this._radius;
      this.dot.setPosition(cc.v2(x, y));
      speedType = _JoystickEnum["default"].SpeedType.FAST;
    }
    _JoystickEvent["default"].getInstance().emit(_JoystickEnum["default"].JoystickEventType.TOUCH_MOVE, event, {
      speedType: speedType,
      moveDistance: p
    });
  },
  _touchEndEvent: function _touchEndEvent(event) {
    this.dot.setPosition(this.ring.getPosition());
    if (this.joystickType === _JoystickEnum["default"].JoystickType.FOLLOW) {
      this.node.opacity = 0;
    }
    _JoystickEvent["default"].getInstance().emit(_JoystickEnum["default"].JoystickEventType.TOUCH_END, event, {
      speedType: _JoystickEnum["default"].SpeedType.STOP
    });
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcSm95c3RpY2suanMiXSwibmFtZXMiOlsiX0pveXN0aWNrRW51bSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX0pveXN0aWNrRXZlbnQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJkb3QiLCJ0eXBlIiwiTm9kZSIsImRpc3BsYXlOYW1lIiwidG9vbHRpcCIsInJpbmciLCJqb3lzdGlja1R5cGUiLCJKb3lzdGlja0VudW0iLCJKb3lzdGlja1R5cGUiLCJGSVhFRCIsImRpcmVjdGlvblR5cGUiLCJEaXJlY3Rpb25UeXBlIiwiQUxMIiwiX3N0aWNrUG9zIiwiX3RvdWNoTG9jYXRpb24iLCJvbkxvYWQiLCJfcmFkaXVzIiwid2lkdGgiLCJfaW5pdFRvdWNoRXZlbnQiLCJGT0xMT1ciLCJub2RlIiwib3BhY2l0eSIsIm9uRW5hYmxlIiwiSm95c3RpY2tFdmVudCIsImdldEluc3RhbmNlIiwib24iLCJKb3lzdGlja0V2ZW50VHlwZSIsIkNIQU5HRV9KT1lTVElDS19UWVBFIiwiX29uQ2hhbmdlSm95c3RpY2tUeXBlIiwib25EaXNhYmxlIiwib2ZmIiwiRXZlbnRUeXBlIiwiVE9VQ0hfU1RBUlQiLCJfdG91Y2hTdGFydEV2ZW50IiwiVE9VQ0hfTU9WRSIsIl90b3VjaE1vdmVFdmVudCIsIlRPVUNIX0VORCIsIl90b3VjaEVuZEV2ZW50IiwiVE9VQ0hfQ0FOQ0VMIiwiZXZlbnQiLCJlbWl0IiwidG91Y2hQb3MiLCJjb252ZXJ0VG9Ob2RlU3BhY2VBUiIsImdldExvY2F0aW9uIiwiZ2V0UG9zaXRpb24iLCJkaXN0YW5jZSIsInN1YiIsIm1hZyIsInNldFBvc2l0aW9uIiwicG9zWCIsIngiLCJwb3NZIiwieSIsInAiLCJ2MiIsIm5vcm1hbGl6ZSIsInNwZWVkVHlwZSIsIlNwZWVkVHlwZSIsIk5PUk1BTCIsIkZBU1QiLCJtb3ZlRGlzdGFuY2UiLCJTVE9Q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dUMsV0FBVyxFQUFFLENBQUM7SUFDN0MsSUFBSSxJQUFJLENBQUN0QyxZQUFZLEtBQUtDLHdCQUFZLENBQUNDLFlBQVksQ0FBQ1csTUFBTSxFQUFFO01BQ3hELElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLEdBQUcsQ0FBQztJQUN6QjtJQUVBRSx5QkFBYSxDQUFDQyxXQUFXLEVBQUUsQ0FBQ2dCLElBQUksQ0FBQ2pDLHdCQUFZLENBQUNtQixpQkFBaUIsQ0FBQ1UsU0FBUyxFQUFFRyxLQUFLLEVBQUU7TUFBQ2lCLFNBQVMsRUFBRWpELHdCQUFZLENBQUNrRCxTQUFTLENBQUNJO0lBQUksQ0FBQyxDQUFDO0VBQy9IO0FBRUosQ0FBQyxDQUFDIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSm95c3RpY2tFbnVtIGZyb20gJ0pveXN0aWNrRW51bSc7XHJcbmltcG9ydCBKb3lzdGlja0V2ZW50IGZyb20gJ0pveXN0aWNrRXZlbnQnO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBkb3Q6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZSxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdEb3QnLFxyXG4gICAgICAgICAgICB0b29sdGlwOiAn5pGH5p2G5pON57q154K5JyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJpbmc6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZSxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdSaW5nJyxcclxuICAgICAgICAgICAgdG9vbHRpcDogJ+aRh+adhuiDjOaZr+iKgueCuScsXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgam95c3RpY2tUeXBlOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IEpveXN0aWNrRW51bS5Kb3lzdGlja1R5cGUuRklYRUQsXHJcbiAgICAgICAgICAgIHR5cGU6IEpveXN0aWNrRW51bS5Kb3lzdGlja1R5cGUsXHJcbiAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAnVG91Y2ggVHlwZScsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfop6bmkbjnsbvlnosnLFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGRpcmVjdGlvblR5cGU6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogSm95c3RpY2tFbnVtLkRpcmVjdGlvblR5cGUuQUxMLFxyXG4gICAgICAgICAgICB0eXBlOiBKb3lzdGlja0VudW0uRGlyZWN0aW9uVHlwZSxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdEaXJlY3Rpb24gVHlwZScsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfmlrnlkJHnsbvlnosnLFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIF9zdGlja1Bvczoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlLFxyXG4gICAgICAgICAgICB0b29sdGlwOiAn5pGH5p2G5omA5Zyo5L2N572uJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIF90b3VjaExvY2F0aW9uOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGUsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfop6bmkbjkvY3nva4nLFxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aGlzLl9yYWRpdXMgPSB0aGlzLnJpbmcud2lkdGggLyAyO1xyXG4gICAgICAgIHRoaXMuX2luaXRUb3VjaEV2ZW50KCk7XHJcbiAgICAgICAgLy8gaGlkZSBqb3lzdGljayB3aGVuIGZvbGxvd1xyXG4gICAgICAgIGlmICh0aGlzLmpveXN0aWNrVHlwZSA9PT0gSm95c3RpY2tFbnVtLkpveXN0aWNrVHlwZS5GT0xMT1cpIHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLm9wYWNpdHkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgb25FbmFibGUoKSB7XHJcbiAgICAgICAgSm95c3RpY2tFdmVudC5nZXRJbnN0YW5jZSgpLm9uKEpveXN0aWNrRW51bS5Kb3lzdGlja0V2ZW50VHlwZS5DSEFOR0VfSk9ZU1RJQ0tfVFlQRSwgdGhpcy5fb25DaGFuZ2VKb3lzdGlja1R5cGUsIHRoaXMpO1xyXG4gICAgfSxcclxuXHJcbiAgICBvbkRpc2FibGUoKSB7XHJcbiAgICAgICAgSm95c3RpY2tFdmVudC5nZXRJbnN0YW5jZSgpLm9mZihKb3lzdGlja0VudW0uSm95c3RpY2tFdmVudFR5cGUuQ0hBTkdFX0pPWVNUSUNLX1RZUEUsIHRoaXMuX29uQ2hhbmdlSm95c3RpY2tUeXBlLCB0aGlzKTtcclxuICAgIH0sXHJcblxyXG4gICAgX29uQ2hhbmdlSm95c3RpY2tUeXBlKHR5cGUpIHtcclxuICAgICAgICB0aGlzLmpveXN0aWNrVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9wYWNpdHkgPSB0eXBlID09PSBKb3lzdGlja0VudW0uSm95c3RpY2tUeXBlLkZJWEVEID8gMjU1IDogMDtcclxuICAgIH0sXHJcblxyXG4gICAgX2luaXRUb3VjaEV2ZW50KCkge1xyXG4gICAgICAgIC8vIHNldCB0aGUgc2l6ZSBvZiBqb3lzdGljayBub2RlIHRvIGNvbnRyb2wgc2NhbGVcclxuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMuX3RvdWNoU3RhcnRFdmVudCwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX01PVkUsIHRoaXMuX3RvdWNoTW92ZUV2ZW50LCB0aGlzKTtcclxuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCB0aGlzLl90b3VjaEVuZEV2ZW50LCB0aGlzKTtcclxuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfQ0FOQ0VMLCB0aGlzLl90b3VjaEVuZEV2ZW50LCB0aGlzKTtcclxuICAgIH0sXHJcblxyXG4gICAgX3RvdWNoU3RhcnRFdmVudChldmVudCkge1xyXG4gICAgICAgIEpveXN0aWNrRXZlbnQuZ2V0SW5zdGFuY2UoKS5lbWl0KEpveXN0aWNrRW51bS5Kb3lzdGlja0V2ZW50VHlwZS5UT1VDSF9TVEFSVCwgXCJqb3lzdGljayB0b3VjaCBzdGFydFwiLCAxMCk7XHJcbiAgICAgICAgY29uc3QgdG91Y2hQb3MgPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoZXZlbnQuZ2V0TG9jYXRpb24oKSk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmpveXN0aWNrVHlwZSA9PT0gSm95c3RpY2tFbnVtLkpveXN0aWNrVHlwZS5GSVhFRCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdGlja1BvcyA9IHRoaXMucmluZy5nZXRQb3NpdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgLy8g6Kem5pG454K55LiO5ZyG5ZyI5Lit5b+D55qE6Led56a7XHJcbiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gdG91Y2hQb3Muc3ViKHRoaXMucmluZy5nZXRQb3NpdGlvbigpKS5tYWcoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIOaJi+aMh+WcqOWchuWciOWGheinpuaRuCzmjqfmnYbot5/pmo/op6bmkbjngrlcclxuICAgICAgICAgICAgdGhpcy5fcmFkaXVzID4gZGlzdGFuY2UgJiYgdGhpcy5kb3Quc2V0UG9zaXRpb24odG91Y2hQb3MpO1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuam95c3RpY2tUeXBlID09PSBKb3lzdGlja0VudW0uSm95c3RpY2tUeXBlLkZPTExPVykge1xyXG5cclxuICAgICAgICAgICAgLy8g6K6w5b2V5pGH5p2G5L2N572u77yM57uZIHRvdWNoIG1vdmUg5L2/55SoXHJcbiAgICAgICAgICAgIHRoaXMuX3N0aWNrUG9zID0gdG91Y2hQb3M7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICB0aGlzLl90b3VjaExvY2F0aW9uID0gZXZlbnQuZ2V0TG9jYXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgIC8vIOabtOaUueaRh+adhueahOS9jee9rlxyXG4gICAgICAgICAgICB0aGlzLnJpbmcuc2V0UG9zaXRpb24odG91Y2hQb3MpO1xyXG4gICAgICAgICAgICB0aGlzLmRvdC5zZXRQb3NpdGlvbih0b3VjaFBvcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBfdG91Y2hNb3ZlRXZlbnQoZXZlbnQpIHtcclxuICAgICAgICAvLyDlpoLmnpwgdG91Y2ggc3RhcnQg5L2N572u5ZKMIHRvdWNoIG1vdmUg55u45ZCM77yM56aB5q2i56e75YqoXHJcbiAgICAgICAgaWYgKHRoaXMuam95c3RpY2tUeXBlID09PSBKb3lzdGlja0VudW0uSm95c3RpY2tUeXBlLkZPTExPVyAmJiB0aGlzLl90b3VjaExvY2F0aW9uID09PSBldmVudC5nZXRMb2NhdGlvbigpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOS7peWchuWciOS4uumUmueCueiOt+WPluinpuaRuOWdkOagh1xyXG4gICAgICAgIGNvbnN0IHRvdWNoUG9zID0gdGhpcy5yaW5nLmNvbnZlcnRUb05vZGVTcGFjZUFSKGV2ZW50LmdldExvY2F0aW9uKCkpO1xyXG4gICAgICAgIGNvbnN0IGRpc3RhbmNlID0gdG91Y2hQb3MubWFnKCk7XHJcblxyXG4gICAgICAgIC8vIOeUseS6juaRh+adhueahCBwb3N0aW9uIOaYr+S7peeItuiKgueCueS4uumUmueCue+8jOaJgOS7peWumuS9jeimgeWKoOS4iiB0b3VjaCBzdGFydCDml7bnmoTkvY3nva5cclxuICAgICAgICBjb25zdCBwb3NYID0gdGhpcy5fc3RpY2tQb3MueCArIHRvdWNoUG9zLng7XHJcbiAgICAgICAgY29uc3QgcG9zWSA9IHRoaXMuX3N0aWNrUG9zLnkgKyB0b3VjaFBvcy55O1xyXG5cclxuICAgICAgICAvLyDlvZLkuIDljJZcclxuICAgICAgICBjb25zdCBwID0gY2MudjIocG9zWCwgcG9zWSkuc3ViKHRoaXMucmluZy5nZXRQb3NpdGlvbigpKS5ub3JtYWxpemUoKTtcclxuXHJcbiAgICAgICAgbGV0IHNwZWVkVHlwZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3JhZGl1cyA+IGRpc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG90LnNldFBvc2l0aW9uKGNjLnYyKHBvc1gsIHBvc1kpKTtcclxuXHJcbiAgICAgICAgICAgIHNwZWVkVHlwZSA9IEpveXN0aWNrRW51bS5TcGVlZFR5cGUuTk9STUFMO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIOaOp+adhuawuOi/nOS/neaMgeWcqOWciOWGhe+8jOW5tuWcqOWciOWGhei3n+maj+inpuaRuOabtOaWsOinkuW6plxyXG4gICAgICAgICAgICBjb25zdCB4ID0gdGhpcy5fc3RpY2tQb3MueCArIHAueCAqIHRoaXMuX3JhZGl1cztcclxuICAgICAgICAgICAgY29uc3QgeSA9IHRoaXMuX3N0aWNrUG9zLnkgKyBwLnkgKiB0aGlzLl9yYWRpdXM7XHJcbiAgICAgICAgICAgIHRoaXMuZG90LnNldFBvc2l0aW9uKGNjLnYyKHgsIHkpKTtcclxuXHJcbiAgICAgICAgICAgIHNwZWVkVHlwZSA9IEpveXN0aWNrRW51bS5TcGVlZFR5cGUuRkFTVDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEpveXN0aWNrRXZlbnQuZ2V0SW5zdGFuY2UoKS5lbWl0KEpveXN0aWNrRW51bS5Kb3lzdGlja0V2ZW50VHlwZS5UT1VDSF9NT1ZFLCBldmVudCwge3NwZWVkVHlwZTogc3BlZWRUeXBlLCBtb3ZlRGlzdGFuY2U6IHB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgX3RvdWNoRW5kRXZlbnQoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmRvdC5zZXRQb3NpdGlvbih0aGlzLnJpbmcuZ2V0UG9zaXRpb24oKSk7XHJcbiAgICAgICAgaWYgKHRoaXMuam95c3RpY2tUeXBlID09PSBKb3lzdGlja0VudW0uSm95c3RpY2tUeXBlLkZPTExPVykge1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBKb3lzdGlja0V2ZW50LmdldEluc3RhbmNlKCkuZW1pdChKb3lzdGlja0VudW0uSm95c3RpY2tFdmVudFR5cGUuVE9VQ0hfRU5ELCBldmVudCwge3NwZWVkVHlwZTogSm95c3RpY2tFbnVtLlNwZWVkVHlwZS5TVE9QfSk7XHJcbiAgICB9LFxyXG5cclxufSk7XHJcbiJdfQ==