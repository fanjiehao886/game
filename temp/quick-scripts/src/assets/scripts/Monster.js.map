{"version":3,"sources":["assets/scripts/Monster.js"],"names":["cc","Class","Component","properties","maxHealth","type","Integer","tooltip","currentHealth","healthBar","Node","hitAudio","AudioClip","deathAudio","bombPrefab","Prefab","starPrefab","detectionRadius","Float","moveSpeed","shootInterval","onLoad","lastShootTime","error","collider","getComponent","BoxCollider","addComponent","size","width","node","height","group","barNode","getChildByName","originalBarWidth","log","isDying","rigidBody","RigidBody","RigidBodyType","Dynamic","fixedRotation","createHealthBar","healthBarNode","addChild","zIndex","barBgNode","barBgSprite","Sprite","color","Color","RED","barSprite","GREEN","setPosition","healthBarBg","start","updateHealthBar","takeDamage","damage","audioEngine","playEffect","Math","max","healthPercentage","die","audioId","setFinishCallback","destroy","spawnStars","count","canvasNode","find","worldPos","convertToWorldSpaceAR","Vec2","ZERO","gameManager","i","star","instantiate","parent","localPos","convertToNodeSpaceAR","offsetX","random","offsetY","x","y","on","EventType","TOUCH_START","targetPos","v2","winSize","worldTargetPos","moveAction","sequence","moveTo","easing","easeBackIn","callFunc","addStar","runAction","update","dt","player","warn","monsterPos","position","playerPos","distance","direction","normalize","velocity","linearVelocity","shootBomb","currentTime","director","getTotalTime","bomb","sub","bombComp","setDirection","setSpeed","setDamage"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n \n    properties: {\n        maxHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物最大生命值'\n        },\n        currentHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物当前生命值'\n        },\n        healthBar: {\n            default: null,\n            type: cc.Node,\n            tooltip: '血条节点'\n        },\n        hitAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '受击音效'\n        },\n        deathAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '死亡音效'\n        },\n        bombPrefab: {\n            default: null,\n            type: cc.Prefab,\n            tooltip: '炸弹预制体'\n        },\n        starPrefab: {\n            default: null,\n            type: cc.Prefab,\n            tooltip: '星星预制体'\n        },\n        detectionRadius: {\n            default: 300,\n            type: cc.Float,\n            tooltip: '检测玩家的范围'\n        },\n        moveSpeed: {\n            default: 50,\n            type: cc.Float,\n            tooltip: '移动速度'\n        },\n        shootInterval: {\n            default: 2.0,\n            type: cc.Float,\n            tooltip: '发射间隔'\n        }\n    },\n \n    onLoad() {\n        this.currentHealth = this.maxHealth;\n        this.lastShootTime = 0; // 确保初始化射击时间\n        \n        // 检查是否有炸弹预制体\n        if (!this.bombPrefab) {\n            cc.error('未设置炸弹预制体！');\n        }\n        \n        // 确保有碰撞组件\n        let collider = this.getComponent(cc.BoxCollider);\n        if (!collider) {\n            collider = this.addComponent(cc.BoxCollider);\n            collider.size.width = this.node.width;\n            collider.size.height = this.node.height;\n        }\n        // 设置碰撞组\n        this.node.group = 'monster';\n \n        // 获取血条中的 Bar 节点\n        if (this.healthBar) {\n            this.barNode = this.healthBar.getChildByName('Bar');\n            if (!this.barNode) {\n                cc.error('找不到 Bar 节点！');\n                return;\n            }\n            // 保存初始宽度\n            this.originalBarWidth = this.barNode.width;\n            cc.log('血条初始宽度：', this.originalBarWidth);\n        } else {\n            cc.error('未设置血条节点！');\n        }\n \n        // 添加死亡标记\n        this.isDying = false;\n        \n        // 添加刚体组件\n        let rigidBody = this.getComponent(cc.RigidBody);\n        if (!rigidBody) {\n            rigidBody = this.addComponent(cc.RigidBody);\n            rigidBody.type = cc.RigidBodyType.Dynamic;\n            rigidBody.fixedRotation = true;\n        }\n    },\n \n    createHealthBar() {\n        // 创建血条节点\n        let healthBarNode = new cc.Node('HealthBar');\n        this.node.addChild(healthBarNode);\n        healthBarNode.zIndex = 1;\n        \n        // 创建背景条\n        let barBgNode = new cc.Node('BarBg');\n        healthBarNode.addChild(barBgNode);\n        let barBgSprite = barBgNode.addComponent(cc.Sprite);\n        barBgSprite.color = cc.Color.RED;\n        \n        // 创建血量条\n        let barNode = new cc.Node('Bar');\n        healthBarNode.addChild(barNode);\n        let barSprite = barNode.addComponent(cc.Sprite);\n        barSprite.color = cc.Color.GREEN;\n        \n        // 设置血条尺寸和位置\n        healthBarNode.width = 100;\n        healthBarNode.height = 10;\n        barBgNode.width = 100;\n        barBgNode.height = 10;\n        barNode.width = 100;\n        barNode.height = 10;\n        \n        // 将血条放在怪物上方\n        healthBarNode.setPosition(0, this.node.height / 2 + 10);\n        \n        // 保存引用\n        this.healthBar = healthBarNode;\n        this.healthBarBg = barBgNode;\n    },\n \n    start() {\n        this.updateHealthBar();\n    },\n \n    takeDamage(damage) {\n        // 如果已经在死亡过程中，不再处理伤害\n        if (this.isDying) return;\n        \n        if (typeof damage !== 'number' || damage <= 0) return;\n        \n        // 使用 playEffect 播放音效\n        if (this.hitAudio) {\n            cc.audioEngine.playEffect(this.hitAudio, false, 0.3);\n        }\n        \n        // 减少生命值\n        this.currentHealth = Math.max(0, this.currentHealth - damage);\n        \n        // 更新血条显示\n        if (this.barNode && this.originalBarWidth) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.barNode.width = this.originalBarWidth * healthPercentage;\n        }\n        \n        cc.log('怪物受到伤害:', damage, '当前生命值:', this.currentHealth);\n        \n        // 检查是否死亡\n        if (this.currentHealth <= 0 && !this.isDying) {\n            this.die();\n        }\n    },\n \n    updateHealthBar() {\n        if (this.healthBar) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.healthBar.width = 100 * healthPercentage;\n        }\n    },\n \n    die() {\n        // 设置死亡标记\n        if (this.isDying) return;\n        this.isDying = true;\n        \n        // 使用 playEffect 播放音效\n        if (this.deathAudio) {\n            let audioId = cc.audioEngine.playEffect(this.deathAudio, false, 0.3);\n            cc.audioEngine.setFinishCallback(audioId, () => {\n                this.node.destroy();\n            });\n        } else {\n            this.node.destroy();\n        }\n        // 生成星星\n        this.spawnStars(3);\n    },\n\n    spawnStars(count) {\n        if (!this.starPrefab) {\n            cc.error('星星预制体未设置!');\n            return;\n        }\n\n        const canvasNode = cc.find('Canvas');\n        const worldPos = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO);\n        const gameManager = canvasNode.getComponent('GameManager');\n        \n        for (let i = 0; i < count; i++) {\n            let star = cc.instantiate(this.starPrefab);\n            star.parent = canvasNode;\n            star.zIndex = 999;\n            const localPos = canvasNode.convertToNodeSpaceAR(worldPos);\n            \n            // 随机位置偏移\n            const offsetX = (Math.random() - 0.5) * 100;\n            const offsetY = (Math.random() - 0.5) * 100;\n            star.setPosition(localPos.x + offsetX, localPos.y + offsetY);\n            \n            // 添加点击事件\n            star.on(cc.Node.EventType.TOUCH_START, () => {\n                // 获取UI右上角的位置\n                const targetPos = cc.v2(cc.winSize.width - 100, cc.winSize.height - 50);\n                const worldTargetPos = canvasNode.convertToNodeSpaceAR(targetPos);\n                \n                // 创建飞向目标的动作\n                const moveAction = cc.sequence(\n                    cc.moveTo(0.5, worldTargetPos).easing(cc.easeBackIn()),\n                    cc.callFunc(() => {\n                        // 通知GameManager增加星星数量\n                        if (gameManager) {\n                            gameManager.addStar();\n                        }\n                        star.destroy();\n                    })\n                );\n                \n                star.runAction(moveAction);\n            });\n        }\n    },\n\n    update(dt) {\n        if (this.isDying) return;\n        \n        // 获取玩家节点\n        let player = cc.find('Canvas/game/player');\n        if (!player) {\n            cc.warn('找不到玩家节点！请确保场景中玩家节点的路径是 Canvas/game/player');\n            return;\n        }\n        \n        // 获取世界坐标下的位置\n        let monsterPos = this.node.parent.convertToWorldSpaceAR(this.node.position);\n        let playerPos = player.parent.convertToWorldSpaceAR(player.position);\n        \n        // 计算与玩家的距离\n        let distance = cc.Vec2.distance(\n            cc.v2(monsterPos.x, monsterPos.y),\n            cc.v2(playerPos.x, playerPos.y)\n        );\n        \n        // 添加调试日志\n        cc.log('怪物位置:', monsterPos, '玩家位置:', playerPos, '距离:', distance, '检测范围:', this.detectionRadius);\n        \n        // 在检测范围内\n        if (distance < this.detectionRadius) {\n            // 追踪玩家\n            let direction = cc.v2(\n                playerPos.x - monsterPos.x,\n                playerPos.y - monsterPos.y\n            ).normalize();\n            \n            let velocity = this.node.getComponent(cc.RigidBody).linearVelocity;\n            velocity.x = direction.x * this.moveSpeed;\n            velocity.y = direction.y * this.moveSpeed;\n            this.node.getComponent(cc.RigidBody).linearVelocity = velocity;\n            \n            cc.log('怪物正在移动，速度:', velocity);\n            \n            // 发射炸弹\n            this.shootBomb(player.position);\n        } else {\n            // 停止移动\n            let velocity = this.node.getComponent(cc.RigidBody).linearVelocity;\n            velocity.x = 0;\n            velocity.y = 0;\n            this.node.getComponent(cc.RigidBody).linearVelocity = velocity;\n            cc.log('怪物停止移动，超出检测范围');\n        }\n    },\n    \n    shootBomb(targetPos) {\n        const currentTime = cc.director.getTotalTime() / 1000;\n        \n        cc.log('尝试发射炸弹 - 当前时间:', currentTime, \n               '上次发射时间:', this.lastShootTime, \n               '发射间隔:', this.shootInterval,\n               '是否可以发射:', (currentTime - this.lastShootTime >= this.shootInterval));\n        \n        if (currentTime - this.lastShootTime < this.shootInterval) {\n            return;\n        }\n        \n        if (!this.bombPrefab) {\n            cc.error('炸弹预制体未设置！请在编辑器中设置 Monster 组件的 Bomb Prefab 属性');\n            return;\n        }\n        \n        this.lastShootTime = currentTime;\n        \n        // 创建炸弹\n        let bomb = cc.instantiate(this.bombPrefab);\n        if (!bomb) {\n            cc.error('炸弹预制体实例化失败！');\n            return;\n        }\n        \n        // 设置炸弹位置为怪物当前位置\n        bomb.setPosition(this.node.position);\n        this.node.parent.addChild(bomb);\n        \n        // 计算方向（使用本地坐标）\n        let direction = targetPos.sub(this.node.position);\n        \n        // 设置炸弹属性\n        let bombComp = bomb.getComponent('Bomb');\n        if (bombComp) {\n            bombComp.setDirection(direction);\n            bombComp.setSpeed(300); // 增加速度使炸弹移动更明显\n            bombComp.setDamage(20);\n            cc.log('炸弹已发射！方向:', direction, '目标位置:', targetPos, '当前位置:', this.node.position);\n        } else {\n            cc.error('炸弹没有Bomb组件！请确保炸弹预制体已添加 Bomb 组件');\n            bomb.destroy();\n        }\n    }\n});\n"]}