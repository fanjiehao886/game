{"version":3,"sources":["assets/scripts/Monster.js"],"names":["cc","Class","Component","properties","maxHealth","type","Integer","tooltip","currentHealth","healthBar","Node","hitAudio","AudioClip","deathAudio","onLoad","collider","getComponent","BoxCollider","addComponent","size","width","node","height","group","barNode","getChildByName","error","originalBarWidth","log","isDying","createHealthBar","healthBarNode","addChild","zIndex","barBgNode","barBgSprite","Sprite","color","Color","RED","barSprite","GREEN","setPosition","healthBarBg","start","updateHealthBar","takeDamage","damage","audioEngine","playEffect","Math","max","healthPercentage","die","audioId","setFinishCallback","destroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n \n    properties: {\n        maxHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物最大生命值'\n        },\n        currentHealth: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '怪物当前生命值'\n        },\n        healthBar: {\n            default: null,\n            type: cc.Node,\n            tooltip: '血条节点'\n        },\n        hitAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '受击音效'\n        },\n        deathAudio: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '死亡音效'\n        }\n    },\n \n    onLoad() {\n        this.currentHealth = this.maxHealth;\n        // 确保有碰撞组件\n        let collider = this.getComponent(cc.BoxCollider);\n        if (!collider) {\n            collider = this.addComponent(cc.BoxCollider);\n            collider.size.width = this.node.width;\n            collider.size.height = this.node.height;\n        }\n        // 设置碰撞组\n        this.node.group = 'monster';\n \n        // 获取血条中的 Bar 节点\n        if (this.healthBar) {\n            this.barNode = this.healthBar.getChildByName('Bar');\n            if (!this.barNode) {\n                cc.error('找不到 Bar 节点！');\n                return;\n            }\n            // 保存初始宽度\n            this.originalBarWidth = this.barNode.width;\n            cc.log('血条初始宽度：', this.originalBarWidth);\n        } else {\n            cc.error('未设置血条节点！');\n        }\n \n        // 添加死亡标记\n        this.isDying = false;\n    },\n \n    createHealthBar() {\n        // 创建血条节点\n        let healthBarNode = new cc.Node('HealthBar');\n        this.node.addChild(healthBarNode);\n        healthBarNode.zIndex = 1;\n        \n        // 创建背景条\n        let barBgNode = new cc.Node('BarBg');\n        healthBarNode.addChild(barBgNode);\n        let barBgSprite = barBgNode.addComponent(cc.Sprite);\n        barBgSprite.color = cc.Color.RED;\n        \n        // 创建血量条\n        let barNode = new cc.Node('Bar');\n        healthBarNode.addChild(barNode);\n        let barSprite = barNode.addComponent(cc.Sprite);\n        barSprite.color = cc.Color.GREEN;\n        \n        // 设置血条尺寸和位置\n        healthBarNode.width = 100;\n        healthBarNode.height = 10;\n        barBgNode.width = 100;\n        barBgNode.height = 10;\n        barNode.width = 100;\n        barNode.height = 10;\n        \n        // 将血条放在怪物上方\n        healthBarNode.setPosition(0, this.node.height / 2 + 10);\n        \n        // 保存引用\n        this.healthBar = healthBarNode;\n        this.healthBarBg = barBgNode;\n    },\n \n    start() {\n        this.updateHealthBar();\n    },\n \n    takeDamage(damage) {\n        // 如果已经在死亡过程中，不再处理伤害\n        if (this.isDying) return;\n        \n        if (typeof damage !== 'number' || damage <= 0) return;\n        \n        // 使用 playEffect 播放音效\n        if (this.hitAudio) {\n            cc.audioEngine.playEffect(this.hitAudio, false, 0.3);\n        }\n        \n        // 减少生命值\n        this.currentHealth = Math.max(0, this.currentHealth - damage);\n        \n        // 更新血条显示\n        if (this.barNode && this.originalBarWidth) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.barNode.width = this.originalBarWidth * healthPercentage;\n        }\n        \n        cc.log('怪物受到伤害:', damage, '当前生命值:', this.currentHealth);\n        \n        // 检查是否死亡\n        if (this.currentHealth <= 0 && !this.isDying) {\n            this.die();\n        }\n    },\n \n    updateHealthBar() {\n        if (this.healthBar) {\n            let healthPercentage = this.currentHealth / this.maxHealth;\n            this.healthBar.width = 100 * healthPercentage;\n        }\n    },\n \n    die() {\n        // 设置死亡标记\n        if (this.isDying) return;\n        this.isDying = true;\n        \n        // 使用 playEffect 播放音效\n        if (this.deathAudio) {\n            let audioId = cc.audioEngine.playEffect(this.deathAudio, false, 0.3);\n            cc.audioEngine.setFinishCallback(audioId, () => {\n                this.node.destroy();\n            });\n        } else {\n            this.node.destroy();\n        }\n    }\n}); \n"]}