{"version":3,"sources":["assets/scripts/Player.js"],"names":["cc","Class","Component","properties","moveDir","v2","displayName","tooltip","_speedType","JoystickEnum","SpeedType","STOP","type","_moveSpeed","stopSpeed","Integer","normalSpeed","fastSpeed","audio_collide","AudioClip","audio_bg","bulletPre","Prefab","shootInterval","Float","lastFiretime","onLoad","rigidBody","getComponent","RigidBody","addComponent","RigidBodyType","Dynamic","fixedRotation","enabledContactListener","collider","BoxCollider","size","node","width","height","group","JoystickEvent","getInstance","on","JoystickEventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","start","audioEngine","playMusic","shoot","monster","currentTime","director","getTotalTime","bullet","instantiate","setPosition","position","parent","addChild","monsterPos","dir","sub","normalize","bulletComp","setDirection","setSpeed","setDamage","onEndContact","contact","selfCollider","otherCollider","currentAudio","playEffect","event","data","speedType","moveDistance","onTouchEnemy","dt","move","lv","linearVelocity","x","y","detectEnemy","enemy","getChildByName","playerPos","distance","mag","console","log","update","NORMAL","FAST","takeDamage","damage","onCollisionEnter","other","self","onBeginContact"],"mappings":"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","sourceRoot":"/","sourcesContent":["import JoystickEnum from \"JoystickEnum\";\nimport JoystickEvent from \"JoystickEvent\";\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n\n        // from joystick\n        moveDir: {\n            default: cc.v2(0, 1),\n            displayName: 'Move Dir',\n            tooltip: '移动方向',\n        },\n        _speedType: {\n            default: JoystickEnum.SpeedType.STOP,\n            displayName: 'Speed Type',\n            type: JoystickEnum.SpeedType,\n            tooltip: '速度级别'\n        },\n\n        // from self\n        _moveSpeed: {\n            default: 0,\n            displayName: 'Move Speed',\n            tooltip: '移动速度'\n        },\n\n        stopSpeed: {\n            default: 0,\n            type: cc.Integer,\n            tooltip: '停止时速度'\n        },\n        normalSpeed: {\n            default: 100,\n            type: cc.Integer,\n            tooltip: '正常速度'\n        },\n        fastSpeed: {\n            default: 200,\n            type: cc.Integer,\n            tooltip: '最快速度'\n        },\n        audio_collide: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '碰撞音效'\n        },\n        audio_bg: {\n            default: null,\n            type: cc.AudioClip,\n            tooltip: '背景音乐'\n        },\n        bulletPre: {\n            default: null,\n            type: cc.Prefab,\n        },\n        shootInterval: {\n            default: 0.05,\n            type: cc.Float,\n        },\n        lastFiretime: {\n            default: 0,\n            type: cc.Float,\n        },\n\n    },\n\n    onLoad() {\n        // 添加刚体组件\n        let rigidBody = this.getComponent(cc.RigidBody);\n        if (!rigidBody) {\n            rigidBody = this.addComponent(cc.RigidBody);\n            rigidBody.type = cc.RigidBodyType.Dynamic;\n            rigidBody.fixedRotation = true;\n            rigidBody.enabledContactListener = true;\n        }\n\n        // 添加碰撞组件\n        let collider = this.getComponent(cc.BoxCollider);\n        if (!collider) {\n            collider = this.addComponent(cc.BoxCollider);\n            collider.size = cc.size(this.node.width, this.node.height);\n            if (this.node.width === 0 || this.node.height === 0) {\n                collider.size = cc.size(40, 40); // 设置默认尺寸\n            }\n        }\n\n        // 设置碰撞分组\n        this.node.group = 'player';\n\n        JoystickEvent.getInstance().on(JoystickEnum.JoystickEventType.TOUCH_START, this.onTouchStart, this);\n        JoystickEvent.getInstance().on(JoystickEnum.JoystickEventType.TOUCH_MOVE, this.onTouchMove, this);\n        JoystickEvent.getInstance().on(JoystickEnum.JoystickEventType.TOUCH_END, this.onTouchEnd, this);\n    },\n\n    start() {\n        cc.audioEngine.playMusic(this.audio_bg, true);\n    },\n\n    shoot(monster) {\n        const currentTime = cc.director.getTotalTime() / 1000;\n        if (currentTime - this.lastFiretime > this.shootInterval) {\n            this.lastFiretime = currentTime;\n            let bullet = cc.instantiate(this.bulletPre);\n            bullet.setPosition(this.node.position);\n            this.node.parent.addChild(bullet);\n\n            let monsterPos = monster.position;\n            let dir = monsterPos.sub(bullet.position).normalize();\n            \n            let bulletComp = bullet.getComponent('bullets');\n            bulletComp.setDirection(dir);\n            bulletComp.setSpeed(200);\n            bulletComp.setDamage(10);\n        }\n    },\n\n    onEndContact: function (contact, selfCollider, otherCollider) {\n        //play sound effect\n        this.currentAudio = cc.audioEngine.playEffect(this.audio_collide, false);\n    },\n\n    onTouchStart() {\n\n    },\n\n    onTouchMove(event, data) {\n        this._speedType = data.speedType;\n        this.moveDir = data.moveDistance;\n    },\n\n    onTouchEnd(event, data) {\n        this._speedType = data.speedType;\n    },\n    onTouchEnemy(monster, dt) {\n        this.shoot(monster);\n    },\n\n    // methods\n    move() {\n        // this.node.angle = cc.misc.radiansToDegrees(\n        //     Math.atan2(this.moveDir.y, this.moveDir.x)\n        // ) - 90;\n        //let newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed / 120));\n        //this.node.setPosition(newPos);\n        let lv = this.node.getComponent(cc.RigidBody).linearVelocity;\n        //console.log(this._moveSpeed);\n        lv.x  = this.moveDir.x * this._moveSpeed / 2;\n        lv.y  = this.moveDir.y * this._moveSpeed / 2;\n        this.node.getComponent(cc.RigidBody).linearVelocity = lv;\n    },\n    detectEnemy(dt) {\n        let enemy = this.node.parent.getChildByName('enemy');\n        let monster = enemy.getChildByName('monster');\n        if (monster) {\n            let monsterPos = monster.position;\n            let playerPos = this.node.position;\n            let distance = monsterPos.sub(playerPos).mag();\n            if (distance < 200) {\n                console.log(\"touch monster\");\n                this.onTouchEnemy(monster, dt);\n            }\n        }\n        else {\n            console.log(\"no monster\");\n        }\n    },\n\n    update(dt) {\n        switch (this._speedType) {\n            case JoystickEnum.SpeedType.STOP:\n                this._moveSpeed = this.stopSpeed;\n                break;\n            case JoystickEnum.SpeedType.NORMAL:\n                this._moveSpeed = this.normalSpeed;\n                break;\n            case JoystickEnum.SpeedType.FAST:\n                this._moveSpeed = this.fastSpeed;\n                break;\n            default:\n                break;\n        }\n        this.move();\n        this.detectEnemy(dt);\n    },\n\n    takeDamage(damage) {\n        cc.log('玩家受到伤害:', damage);\n        // 处理玩家受伤逻辑\n    },\n\n    // 添加碰撞回调\n    onCollisionEnter(other, self) {\n        cc.log('Player 碰撞开始 - 碰撞对象:', other.node.group);\n        if (other.node.group === 'bomb') {\n            cc.log('Player 被炸弹击中');\n        }\n    },\n\n    onBeginContact(contact, selfCollider, otherCollider) {\n        cc.log('Player 接触开始 - 接触对象:', otherCollider.node.group);\n        if (otherCollider.node.group === 'bomb') {\n            cc.log('Player 被炸弹击中');\n        }\n    },\n});\n"]}