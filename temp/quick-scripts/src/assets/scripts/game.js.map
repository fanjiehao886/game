{"version":3,"sources":["assets\\scripts\\game.js"],"names":["cc","Class","Component","properties","tiledMap","TiledMap","onLoad","p","director","getPhysicsManager","enabled","debugDrawFlags","gravity","v2","document","addEventListener","_this","resources","load","AudioClip","err","audioClip","audioSource","addComponent","AudioSource","clip","play","start","tiledSize","getTileSize","layer","getLayer","layerSize","getLayerSize","i","width","j","height","tiled","getTiledTileAt","gid","node","group","body","RigidBody","type","RigidBodyType","Static","collider","PhysicsBoxCollider","offset","size","apply"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGAA,EAAE,CAACC,KAAK,CAAC;EACL,WAASD,EAAE,CAACE,SAAS;EAErBC,UAAU,EAAE;IACRC,QAAQ,EAAEJ,EAAE,CAACK;EACjB,CAAC;EAED;EAEAC,MAAM,WAAAA,OAAA,EAAI;IACN,IAAIC,CAAC,GAAGP,EAAE,CAACQ,QAAQ,CAACC,iBAAiB,EAAE;IACvCF,CAAC,CAACG,OAAO,GAAG,IAAI;IAChBH,CAAC,CAACI,cAAc,GAAG,KAAK;IACxBJ,CAAC,CAACK,OAAO,GAAGZ,EAAE,CAACa,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;IAEtBC,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,EAAE,YAAY;MAAA,IAAAC,KAAA;MACzDhB,EAAE,CAACiB,SAAS,CAACC,IAAI,CAAC,aAAa,EAAElB,EAAE,CAACmB,SAAS,EAAE,UAACC,GAAG,EAAEC,SAAS,EAAK;QAC/D,IAAIC,WAAW,GAAGN,KAAI,CAACO,YAAY,CAACvB,EAAE,CAACwB,WAAW,CAAC;QACnDF,WAAW,CAACG,IAAI,GAAGJ,SAAS;QAC5BC,WAAW,CAACI,IAAI,EAAE;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAEDC,KAAK,WAAAA,MAAA,EAAI;IACL,IAAIC,SAAS,GAAG,IAAI,CAACxB,QAAQ,CAACyB,WAAW,EAAE;IAC3C,IAAIC,KAAK,GAAG,IAAI,CAAC1B,QAAQ,CAAC2B,QAAQ,CAAC,QAAQ,CAAC;IAC5C,IAAIC,SAAS,GAAGF,KAAK,CAACG,YAAY,EAAE;IAEpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,KAAK,EAAED,CAAC,EAAE,EAAE;MACtC,KAAI,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,SAAS,CAACK,MAAM,EAAED,CAAC,EAAE,EAAC;QACjC,IAAIE,KAAK,GAAGR,KAAK,CAACS,cAAc,CAACL,CAAC,EAAEE,CAAC,EAAE,IAAI,CAAC;QAC5C,IAAGE,KAAK,CAACE,GAAG,IAAI,CAAC,EAAC;UACdF,KAAK,CAACG,IAAI,CAACC,KAAK,GAAG,MAAM;UACzB,IAAIC,IAAI,GAAGL,KAAK,CAACG,IAAI,CAAClB,YAAY,CAACvB,EAAE,CAAC4C,SAAS,CAAC;UAChDD,IAAI,CAACE,IAAI,GAAG7C,EAAE,CAAC8C,aAAa,CAACC,MAAM;UACnC,IAAIC,QAAQ,GAAGV,KAAK,CAACG,IAAI,CAAClB,YAAY,CAACvB,EAAE,CAACiD,kBAAkB,CAAC;UAC7DD,QAAQ,CAACE,MAAM,GAAGlD,EAAE,CAACa,EAAE,CAACe,SAAS,CAACO,KAAK,GAAC,CAAC,EAAEP,SAAS,CAACS,MAAM,GAAC,CAAC,CAAC;UAC9DW,QAAQ,CAACG,IAAI,GAAGvB,SAAS;UACzBoB,QAAQ,CAACI,KAAK,EAAE;QACpB;MACJ;IACJ;EAEJ,CAAC,CAED;AACJ,CAAC,CAAC","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tiledMap: cc.TiledMap\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        let p = cc.director.getPhysicsManager();\r\n        p.enabled = true;\r\n        p.debugDrawFlags = false;\r\n        p.gravity = cc.v2(0,0);\r\n\r\n        document.addEventListener('WeixinJSBridgeReady', function () {\r\n            cc.resources.load('audios/rock', cc.AudioClip, (err, audioClip) => {\r\n                var audioSource = this.addComponent(cc.AudioSource);\r\n                audioSource.clip = audioClip;\r\n                audioSource.play();\r\n            });\r\n        });\r\n    },\r\n\r\n    start () {\r\n        let tiledSize = this.tiledMap.getTileSize();\r\n        let layer = this.tiledMap.getLayer('fences');\r\n        let layerSize = layer.getLayerSize();\r\n\r\n        for (let i = 0; i < layerSize.width; i++) {\r\n            for(let j=0; j<layerSize.height; j++){\r\n                let tiled = layer.getTiledTileAt(i, j, true);\r\n                if(tiled.gid != 0){\r\n                    tiled.node.group = 'wall';\r\n                    let body = tiled.node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    let collider = tiled.node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset = cc.v2(tiledSize.width/2, tiledSize.height/2);\r\n                    collider.size = tiledSize;\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}